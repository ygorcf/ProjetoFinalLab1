#ifndef _FUNCOES_MENU_C_
#define _FUNCOES_MENU_C_

#include <Cabecalhos/tiposDadosJanela.h>
#include <Cabecalhos/funcoesJanela.h>
#include <Cabecalhos/funcoesPiloto.h>
#include <stdio.h>



// Objetivo:
int checarEventoMenuPrincipal(Janela janela, Painel painelDestino){
	int sair = 0;
	ComponenteClicado compClicado;
	Componente compTitulo, compPilotos, compSair;
	Retangulo rect = {30,100,200,100};
	
	limparPainel(painelDestino);
	Componente compTabelaTodosPilotos = pintarTabelaPainel(10, 80, 540, 350, 1, COR_TABELA, COR_FUNDO, 5, 10, painelDestino);
	apresentarTodosPilotos(compTabelaTodosPilotos, janela);
	/*compTitulo = pintarTextoPainel("MENU PRINCIPAL", 180, 10, FONTE_TITULO_PRINCIPAL, janela);
	compPilotos = pintarTextoPainel("Pilotos", 10, 40, FONTE_TEXTO_PRINCIPAL, janela);
	compSair = pintarTextoPainel("SAIR", 10, 460, FONTE_TEXTO_PRINCIPAL, janela);
	//pintarRetanguloPainel(rect.x, rect.y, rect.w, rect.h, (Cor){0,0,128,255}, painelDestino);
	//pintarTabelaPainel(10, 100, 500, 300, 1, COR_PRINCIPAL, COR_FUNDO, 5, 2, painelDestino);
	/*
	SDL_SetRenderDrawColor(painelDestino, 0, 0, 128, 255);
	SDL_RenderDrawRect(painelDestino, &rect);
	SDL_SetTextInputRect(&rect);*/
	atualizarPainel(painelDestino);
	
	SDL_Event evento;
	while(!sair){
		while(SDL_WaitEvent(&evento)){
      if(evento.type == SDL_QUIT){
        compClicado = CLICADO_FECHAR;
        sair = 1;
        break;
			} else if(evento.type == SDL_MOUSEBUTTONUP){
    		if(verificarCliqueDentroRetangulo(compSair.area)){
    			compClicado = CLICADO_SAIR;
    			sair = 1;
    			break;
				} else if(verificarCliqueDentroRetangulo(compPilotos.area)){
    			compClicado = CLICADO_PILOTOS;
    			sair = 1;
    			break;
				}
			}
			SDL_FlushEvent(evento.type);
		}
	}
	
	return compClicado;
}



// Objetivo:
int checarEventoMenuPilotos(Janela janela, Painel painelDestino){
	int sair = 0, pintaMenu = 1;
	ComponenteClicado compClicado;
	Componente compTitulo, compNovoPiloto, compTabelaTodosPilotos, compVoltar;
	
	SDL_Event evento;
	while(!sair){
		if(pintaMenu){
			limparPainel(painelDestino);
			compTitulo = pintarTextoPainel("PILOTOS", 200, 10, FONTE_TITULO_PRINCIPAL, janela);
			compNovoPiloto = pintarTextoPainel("Novo Piloto", 10, 40, FONTE_TEXTO_PRINCIPAL, janela);
			compTabelaTodosPilotos = pintarTabelaPainel(10, 80, 540, 350, 1, COR_TABELA, COR_FUNDO, 5, 10, painelDestino);
			compVoltar = pintarTextoPainel("Voltar", 10, 460, FONTE_TEXTO_PRINCIPAL, janela);
			apresentarTodosPilotos(compTabelaTodosPilotos, janela);
			//pintarDadoTabela(compTabelaTodosPilotos, 2, 1, "JAO", janela);
			atualizarPainel(painelDestino);
		}
		while(SDL_WaitEvent(&evento)){
      if(evento.type == SDL_QUIT){
	      compClicado = CLICADO_FECHAR;
	      sair = 1;
        break;
			}else if(evento.type == SDL_MOUSEBUTTONUP){
    		if(verificarCliqueDentroRetangulo(compVoltar.area)){
	  			compClicado = CLICADO_VOLTAR;
	  			sair = 1;
	  			break;
				} else if(verificarCliqueDentroRetangulo(compNovoPiloto.area)){
    			compClicado = CLICADO_NOVO_PILOTO;
					switch(checarEventoMenuNovoPiloto(janela, painelDestino)){
		    		case CLICADO_FECHAR:
		    			sair = 1;
		    			break;
						default:
							sair = 0;
					}
					pintaMenu = 1;
    			break;
				}
			}
			SDL_FlushEvent(evento.type);
  	}
	}
	return compClicado;
}



// Objetivo:
int checarEventoMenuNovoPiloto(Janela janela, Painel painelDestino){
	int ret = 0, sair = 0, campoAtivo = 0, pintarTexto = 0;
	ComponenteClicado compClicado;
	Componente compTitulo, compNomePiloto, compVoltar, compIdadePiloto, compSexoPiloto, 
	compPaisNatalPiloto, compNomePilotoUser, compSairUser, compIdadePilotoUser, 
	compSexoPilotoMUser, compSexoPilotoFUser, compPaisNatalPilotoUser, compAtualizar,
	compNomePilotoDigitado, compIdadePilotoDigitado, compSexoPilotoMText, 
	compSexoPilotoFText, compPaisNatalPilotoDigitado, compCadastrar;
	char nomePiloto[127], sexoPiloto = 'M', idadePilotoString[4], paisNatal[127];
	Piloto pilotoCadastrar;
	//alocarPiloto(&pilotoCadastrar);
	
	compAtualizar.painelPertencente = NULL;
	compNomePilotoDigitado.area.w = 0;
	compPaisNatalPilotoDigitado.area.w = 0;
	compPaisNatalPilotoDigitado.area.h = 0;
	memset(nomePiloto, '\0', sizeof(nomePiloto));
	memset(idadePilotoString, '\0', sizeof(idadePilotoString));
	
	
	limparPainel(painelDestino);
	compTitulo = pintarTextoPainel("NOVO PILOTO", 200, 10, FONTE_TITULO_PRINCIPAL, janela);
	compNomePiloto = pintarTextoPainel("Nome do Piloto:", 10, 60, FONTE_TEXTO_PRINCIPAL, janela);
	compIdadePiloto = pintarTextoPainel("Idade do Piloto:", 10, 100, FONTE_TEXTO_PRINCIPAL, janela);
	compSexoPiloto = pintarTextoPainel("Sexo do Piloto:", 10, 140, FONTE_TEXTO_PRINCIPAL, janela);
	compPaisNatalPiloto = pintarTextoPainel("Pais natal do Piloto:", 10, 180, FONTE_TEXTO_PRINCIPAL, janela);
	compVoltar = pintarTextoPainel("Voltar", 10, 460, FONTE_TEXTO_PRINCIPAL, janela);
	compNomePilotoUser = pintarRetanguloPainel((compNomePiloto.area.x + compNomePiloto.area.w + 10), compNomePiloto.area.y, 300, 30, COR_PRINCIPAL, painelDestino);
	compIdadePilotoUser = pintarRetanguloPainel((compIdadePiloto.area.x + compIdadePiloto.area.w + 10), compIdadePiloto.area.y, 300, 30, COR_PRINCIPAL, painelDestino);
	compSexoPilotoMUser = pintarRetanguloPainel((compSexoPiloto.area.x + compSexoPiloto.area.w + 10), compSexoPiloto.area.y, 30, 30, COR_SELECIONADO, painelDestino);
	pintarTextoPainel("M", (compSexoPilotoMUser.area.x+10), (compSexoPilotoMUser.area.y+5), FONTE_TEXTO_PRINCIPAL, janela);
	compSexoPilotoFUser = pintarRetanguloPainel((compSexoPiloto.area.x + compSexoPiloto.area.w + 50), compSexoPiloto.area.y, 30, 30, COR_PRINCIPAL, painelDestino);
	pintarTextoPainel("F", (compSexoPilotoFUser.area.x+10), (compSexoPilotoFUser.area.y+5), FONTE_TEXTO_PRINCIPAL, janela);
	compPaisNatalPilotoUser = pintarRetanguloPainel((compPaisNatalPiloto.area.x + compPaisNatalPiloto.area.w + 10), compPaisNatalPiloto.area.y, 300, 30, COR_PRINCIPAL, painelDestino);
	compCadastrar = pintarRetanguloPainel((compPaisNatalPiloto.area.x + compPaisNatalPiloto.area.w + 110), 260, 83, 30, COR_PRINCIPAL, painelDestino);
	pintarTextoPainel("Cadastrar", (compCadastrar.area.x + 10), (compCadastrar.area.y+5), FONTE_TEXTO_PRINCIPAL, janela);
	atualizarPainel(painelDestino);
	
	SDL_Event event;
	SDL_StartTextInput();
	while(!sair){
		while(SDL_WaitEvent(&event)){
			if(event.type == SDL_QUIT){
				compClicado = CLICADO_FECHAR;
				sair = 1;
				break;
			}else if(event.type == SDL_MOUSEBUTTONUP){
				if(compAtualizar.painelPertencente != NULL){
					atualizarBordaComponente(&compAtualizar);
				}
				if(verificarCliqueDentroRetangulo(compVoltar.area)){
					compClicado = CLICADO_VOLTAR;
		      sair = 1;
		      break;
				}else if(verificarCliqueDentroRetangulo(compNomePilotoUser.area)){
					compAtualizar = pintarRetanguloPainel((compNomePiloto.area.x + compNomePiloto.area.w + 10), compNomePiloto.area.y, 300, 30, COR_SELECIONADO, painelDestino);
					if(strlen(nomePiloto) <= 32 && strlen(nomePiloto) > 0)
						compNomePilotoDigitado = pintarTextoPainel(nomePiloto, (compNomePiloto.area.x + compNomePiloto.area.w + 15), compNomePiloto.area.y+5, FONTE_TEXTO_PRINCIPAL, janela);
					campoAtivo = 1;
				}else if(verificarCliqueDentroRetangulo(compIdadePilotoUser.area)){
					compAtualizar = pintarRetanguloPainel((compIdadePiloto.area.x + compIdadePiloto.area.w + 10), compIdadePiloto.area.y, 300, 30, COR_SELECIONADO, painelDestino);
					if(strlen(idadePilotoString) <= 3 && strlen(idadePilotoString) > 0)
						pintarTextoPainel(idadePilotoString, (compIdadePiloto.area.x + compIdadePiloto.area.w + 15), compIdadePiloto.area.y+5, FONTE_TEXTO_PRINCIPAL, janela);
					campoAtivo = 2;
        }else if(verificarCliqueDentroRetangulo(compSexoPilotoMUser.area)){
					pintarRetanguloPainel((compSexoPiloto.area.x + compSexoPiloto.area.w + 50), compSexoPiloto.area.y, 30, 30, COR_PRINCIPAL, painelDestino);
					pintarRetanguloPainel((compSexoPiloto.area.x + compSexoPiloto.area.w + 10), compSexoPiloto.area.y, 30, 30, COR_SELECIONADO, painelDestino);
					//pintarTextoPainel("M", painelDestino, (compSexoPilotoMUser.area.x+10), (compSexoPilotoMUser.area.y+5), FONTE_TEXTO_PRINCIPAL, janela);
					//pintarTextoPainel("F", painelDestino, (compSexoPilotoFUser.area.x+10), (compSexoPilotoFUser.area.y+5), FONTE_TEXTO_PRINCIPAL, janela);
					sexoPiloto = 'M';
        }else if(verificarCliqueDentroRetangulo(compSexoPilotoFUser.area)){
					pintarRetanguloPainel((compSexoPiloto.area.x + compSexoPiloto.area.w + 10), compSexoPiloto.area.y, 30, 30, COR_PRINCIPAL, painelDestino);
					pintarRetanguloPainel((compSexoPiloto.area.x + compSexoPiloto.area.w + 50), compSexoPiloto.area.y, 30, 30, COR_SELECIONADO, painelDestino);
					//pintarTextoPainel("M", painelDestino, (compSexoPilotoMUser.area.x+10), (compSexoPilotoMUser.area.y+5), FONTE_TEXTO_PRINCIPAL, janela);
					//pintarTextoPainel("F", painelDestino, (compSexoPilotoFUser.area.x+10), (compSexoPilotoFUser.area.y+5), FONTE_TEXTO_PRINCIPAL, janela);
					sexoPiloto = 'F';
        }else if(verificarCliqueDentroRetangulo(compPaisNatalPilotoUser.area)){
					compAtualizar = pintarRetanguloPainel((compPaisNatalPiloto.area.x + compPaisNatalPiloto.area.w + 10), compPaisNatalPiloto.area.y, 300, 30, COR_SELECIONADO, painelDestino);
					compClicado = CLICADO_PAIS_PILOTO;
					checarEventoMenuEscolhePais(paisNatal);
					SDL_SetRenderDrawColor(painelDestino, 255, 255, 255, 255);
					SDL_RenderFillRect(painelDestino, &compPaisNatalPilotoDigitado.area);
					compPaisNatalPilotoDigitado = pintarTextoPainel(paisNatal, (compPaisNatalPiloto.area.x + compPaisNatalPiloto.area.w + 15), compPaisNatalPiloto.area.y+5, FONTE_TEXTO_PRINCIPAL, janela);
        }else if(verificarCliqueDentroRetangulo(compCadastrar.area)){
					/* CADASTRAR USUARIO */
					printf("- %d\n", sizeof(pilotoCadastrar));
					pilotoCadastrar.idade = atoi(idadePilotoString);
					strcpy(pilotoCadastrar.nome, nomePiloto);
					strcpy(pilotoCadastrar.paisOrigem, paisNatal);
					pilotoCadastrar.sexo = sexoPiloto;
					salvarPiloto(pilotoCadastrar);
        }
			}else if( event.type == SDL_KEYDOWN ){
			  	if( event.key.keysym.sym == SDLK_BACKSPACE){
	          	if(campoAtivo == 1){
	          		if(strlen(nomePiloto) > 0)
									compNomePilotoDigitado = retirarUltimaLetraTextoPainel(nomePiloto, compNomePilotoDigitado);
							} else if(campoAtivo == 2){
	          		if(strlen(idadePilotoString) > 0)
									compIdadePilotoDigitado = retirarUltimaLetraTextoPainel(idadePilotoString, compIdadePilotoDigitado);
							}
		      		//renderText = 1;
		      		//atualizaPainel = 1;
	       		}
		        /*//Handle copy
		        else if( event.key.keysym.sym == SDLK_c && SDL_GetModState() & KMOD_CTRL )
		        {
		            SDL_SetClipboardText( inputText );
		            printf("COPY\n");
		        }
		        //Handle paste
		        else if( event.key.keysym.sym == SDLK_v && SDL_GetModState() & KMOD_CTRL )
		        {
		            strcpy(inputText, SDL_GetClipboardText());
		            renderText = 1;
		            printf("PASTE\n");
		        }*/
      		} else if( event.type == SDL_TEXTINPUT ){
		    if( !( ( event.text.text[ 0 ] == 'c' || event.text.text[ 0 ] == 'C' ) && ( event.text.text[ 0 ] == 'v' || event.text.text[ 0 ] == 'V' ) && SDL_GetModState() & KMOD_CTRL ) ){
		      if(campoAtivo == 1){
						if(strlen(nomePiloto)+1 <= 32 && strlen(nomePiloto)+1 > 0)
							strcat(nomePiloto, event.text.text);
					} else if(campoAtivo == 2 && atoi(event.text.text) != 0){
						if(strlen(idadePilotoString)+1 <= 3 && strlen(idadePilotoString)+1 > 0)
							strcat(idadePilotoString, event.text.text);
					}
		      pintarTexto = 1;
		      //atualizaPainel = 1;
		    }
		  }
			if(pintarTexto){
      	if(strlen(nomePiloto) <= 32 && strlen(nomePiloto) > 0)
					compNomePilotoDigitado = pintarTextoPainel(nomePiloto, (compNomePiloto.area.x + compNomePiloto.area.w + 15), compNomePiloto.area.y+5, FONTE_TEXTO_PRINCIPAL, janela);
				if(strlen(idadePilotoString) <= 3 && strlen(idadePilotoString) > 0)
					compIdadePilotoDigitado = pintarTextoPainel(idadePilotoString, (compIdadePiloto.area.x + compIdadePiloto.area.w + 15), compIdadePiloto.area.y+5, FONTE_TEXTO_PRINCIPAL, janela);
				
	      pintarTexto = 0;
	    }
			/*if(atualizaPainel){
				atualizaPainel = 0;*/
			//}
			atualizarPainel(painelDestino);
			SDL_FlushEvent(event.type);
		}
	}
  SDL_StopTextInput();
	
	return compClicado;
}



// Objetivo:
int checarEventoMenuEscolhePais(char *strDestinoPaisNatal){
	int ret = 0, sair = 0, atualizaPainel = 0, campoAtivo = 0, renderText, paisAtual = 0;
	ComponenteClicado compClicado;
	Cor corFundo = COR_FUNDO, corPrincipal = COR_PRINCIPAL;
	FILE *arquivoPaises;
	Componente compTitulo, compPais;
	
	char linha[127], pais[127];
	
	arquivoPaises = fopen("Dados/Paises.guyg", "r");
	if(arquivoPaises == NULL){
		salvarErro("Erro ao abrir o arquivo dos paises 'fopen' de 'checarEventoMenuEscolhePais'\n");
	}
	
	Janela janelaPaises = criarJanela("Lista de Paises", 300, 560);
	Painel painelPaises = criarPainel(janelaPaises);
	
	compTitulo = pintarTextoPainel("Paises", 90, 10, FONTE_TITULO_PRINCIPAL, janelaPaises);
	
	while(!feof(arquivoPaises)){
		memset(linha, '\0', sizeof(linha));
		fgets(linha, 127, arquivoPaises);
		//strcpy(linha, rRemoveQuebraLinha(linha));
		rRemoveQuebraLinha(linha);
		if(strlen(linha) < 1) break;
		compPais = pintarTextoPainel(linha, 10, 60+paisAtual*20, FONTE_TEXTO_PRINCIPAL, janelaPaises);
		paisAtual++;
	}
	fclose(arquivoPaises);
	
	atualizarPainel(painelPaises);
	Retangulo retanguloOpcoesPaises;
	
	retanguloOpcoesPaises.x = 10;
	retanguloOpcoesPaises.y = 60;
	retanguloOpcoesPaises.w = compPais.area.w;
	retanguloOpcoesPaises.h = compPais.area.h * paisAtual;
	
	SDL_Event evento;
	while(!sair){
		while(SDL_WaitEvent(&evento)){
			if(evento.type == SDL_QUIT){
				compClicado = CLICADO_FECHAR;
				sair = 1;
				break;
			}else if(evento.type == SDL_MOUSEBUTTONUP){
				if(verificarCliqueDentroRetangulo(retanguloOpcoesPaises)){
					int mouseY, mouseX;
					SDL_GetMouseState(&mouseX, &mouseY);
					int paisEscolhido = (int)((((mouseY - retanguloOpcoesPaises.y))/(retanguloOpcoesPaises.h/paisAtual))+1);
					int qtdLinhas = 0;
					memset(pais, '\0', sizeof(pais));
					
					arquivoPaises = fopen("Dados/Paises.guyg", "r");
					if(arquivoPaises == NULL){
						salvarErro("Erro ao abrir o arquivo dos paises 'fopen' de 'checarEventoMenuEscolhePais'\n");
					}
					
					while(qtdLinhas < paisEscolhido){
						fgets(pais, 127, arquivoPaises);
						qtdLinhas++;
						if(feof(arquivoPaises)) break;
					}
					fclose(arquivoPaises);
					sair = 1;
					break;
				}
			}
			atualizarPainel(painelPaises);
			SDL_FlushEvent(evento.type);
		}
	}
	SDL_DestroyWindow(janelaPaises);
	rRemoveQuebraLinha(pais);
	strcpy(strDestinoPaisNatal, pais);
	return compClicado;
}


#endif /* _FUNCOES_MENU_C_ */
